{"version":3,"sources":["Constants/initialState.js","Components/editorBox.js","Components/previewBox.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["initialState","content","EditorBox","updateState","className","id","onChange","value","marked","setOptions","breaks","renderer","Renderer","PreviewBox","dangerouslySetInnerHTML","__html","link","href","title","text","App","useState","state","setState","event","target","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAkDeA,EAJM,CACpBC,QA/CgB,wmC,OCGF,SAASC,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,YAAaF,EAAS,EAATA,QAC/C,OACC,sBAAKG,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAf,oBACA,0BAAUC,GAAG,SAASC,SAAUH,EAAaI,MAAON,O,oBCHvDO,IAAOC,WAAW,CAChBC,QAAQ,IAEV,IAAMC,EAAW,IAAIH,IAAOI,SAKb,SAASC,EAAT,GAAgC,IAAXZ,EAAU,EAAVA,QACnC,OACC,sBAAKG,UAAU,MAAf,UACC,qBAAKA,UAAU,aAAf,uBACA,qBAAKC,GAAG,UAAUD,UAAU,SAASU,wBAAyB,CAACC,OAAQP,IAAOP,EAAS,CAAEU,SAAUA,UARtGA,EAASK,KAAO,SAASC,EAAMC,EAAOC,GACpC,MAAO,mCAA4BF,EAA5B,aAAqCE,GAAS,QCiBxCC,MAnBf,WAAgB,IAAD,EACaC,mBAASrB,GADtB,mBACNsB,EADM,KACCC,EADD,KAQb,OACE,gCACE,wDACA,sBAAKnB,UAAU,YAAf,UACE,cAACF,EAAD,CAAYC,YATlB,SAAuBqB,GACrBD,EAAS,CAACtB,QAASuB,EAAMC,OAAOlB,QAChCmB,QAAQC,IAAIL,EAAMrB,UAO0BA,QAASqB,EAAMrB,UACvD,cAACY,EAAD,CAAYZ,QAASqB,EAAMrB,iBCRpB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dd0b573f.chunk.js","sourcesContent":["const placeholder = `\r\n# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nconst initialState = {\r\n\tcontent: placeholder\r\n};\r\n\r\nexport default initialState;","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport default function EditorBox({updateState, content}){\r\n\treturn (\r\n\t\t<div className=\"box\">\r\n\t\t\t<div className=\"h2a blue\">Editor</div>\r\n\t\t\t<textarea id=\"editor\" onChange={updateState} value={content}></textarea>\r\n\t\t</div>\r\n\t);\r\n};","import React from 'react';\r\nimport '../index.css';\r\nimport marked from 'marked';\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function(href, title, text) {\r\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\r\n};\r\n\r\nexport default function PreviewBox({content}) {\r\n\treturn (\r\n\t\t<div className=\"box\">\r\n\t\t\t<div className=\"h2a orange\">Previewer</div>\r\n\t\t\t<div id=\"preview\" className=\"subBox\" dangerouslySetInnerHTML={{__html: marked(content, { renderer: renderer })}} />\r\n\t\t</div>\r\n\t);\r\n};","import React, {useState} from 'react';\nimport '../index.css';\nimport initialState from '../Constants/initialState.js';\nimport EditorBox from '../Components/editorBox.js';\nimport PreviewBox from '../Components/previewBox.js';\n\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  function onInputChange(event) {\n    setState({content: event.target.value});\n    console.log(state.content);\n  }\n\n  return (\n    <div>\n      <h1>Online Markdown Editor</h1>\n      <div className=\"container\">\n        <EditorBox  updateState={onInputChange} content={state.content}/>\n        <PreviewBox content={state.content} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}